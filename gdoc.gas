var RPI_GATEWAY_URL = 'http://rpi-home1983.mydns.jp:7997'

var COL_A = 1
var COL_B = 2
var COL_C = 3
var COL_D = 4
var COL_E = 5
var COL_F = 6
var COL_G = 7
var COL_H = 8
var COL_I = 9
var COL_J = 10
var COL_K = 11
var COL_L = 12
var COL_M = 13
var COL_N = 14

var COUNT_COL_POS = COL_N

function toArrayForRpiGateway(date, dat, name) {
    if (dat == null) {
        return null
    }
    var temp = dat.temp / 100.0;
    var battery = dat.battery;
    var hum = 0
    var il = 0
    var mo = "" //Utilities.formatDate(new Date(dat.newest_events.mo.created_at), 'Asia/Tokyo', 'yyyy_MM_dd_HH_mm_ss');
    var co2 = dat.co2
    return [date, name, temp, hum, il, 0, mo, co2];

}

function addData(sheet, storage, skipCountCond, row_pos, data) {
    if (data == null) {
        return 0
    }
    var room_name = ""
    var row = 0
    for (var i = 0; i < 10; i++) { //TODO!!!!!!!!!!!!!
        room_name = storage.getRange(4 + i, COL_B).getValue();
        if (room_name === data[1]) {
            row = 4 + i;
            break;
        }
    }
    var last_data = storage.getRange(row, COL_B, 1, 7).getValues()[0];

    var val_new = 0
    var val_old = 0
    var change = false

    //Temp
    val_old = parseFloat(last_data[1])
    val_new = parseFloat(data[2])
    if (Math.abs(val_new - val_old) >= 1.0) {
        change = true
    }
    //Hum
    if (!last_data[2].toString().equals(data[3].toString())) {
        // change = true
    }
    //Lum
    val_old = parseInt(last_data[3])
    val_new = parseInt(data[4])
    if (Math.abs(val_new - val_old) >= 10) {
        // change = true
    }

    //Mot
    if (!last_data[4].toString().equals(data[5].toString())) {
        // change = true
    }

    //var skipCount= parseInt(last_data[6]) + 1
    var skipCount = storage.getRange(row_pos, COUNT_COL_POS).getValue() + 1
    change |= (skipCount >= skipCountCond) ? true : false
    // update
    if (change) {
        sheet.insertRows(2, 1);
        sheet.getRange(2, 1, 1, 7).setValues([data]);

        storage.getRange(row_pos, 1, 1, 7).setValues([data]);
        skipCount = 0
    }
    storage.getRange(row_pos, COUNT_COL_POS).setValue(skipCount);

    return change ? 1 : 0
}

function co2() {
    const sheet = SpreadsheetApp.getActive().getSheetByName("CO2")
    const storage = SpreadsheetApp.getActive().getSheetByName("メモリ")

    var beacon = getBeaconFromRpiGateway();
    if (beacon != null) {
        beacon = beacon[0]
    }
    var date = Utilities.formatDate(new Date(), 'Asia/Tokyo', 'yyyy/MM/dd HH:mm:ss');
    var last_mo_created_at = storage.getRange(2, COL_A).getValue();

    var row4 = toArrayForRpiGateway(date, beacon, "SensorBeacon_01")


    var skipCountCond = 6

    addData(sheet, storage, skipCountCond, 4, row3)
    addData(sheet, storage, skipCountCond, 5, row2)
    if (addData(sheet, storage, skipCountCond, 6, row1) == 1) {
        storage.getRange(2, COL_A).setValue(mot);
    }
    addData(sheet, storage, skipCountCond, 7, row4)
    addData(sheet, storage, skipCountCond, 8, row5)
}


function getBeaconFromRpiGateway() {

    var url = RPI_GATEWAY_URL + "/beacon"
    var headers = { 'Content-Type': 'application/json' };
    var options = { 'headers': headers };

    try {
        var result = UrlFetchApp.fetch(url, options);
        if (result.getResponseCode() == 200) {
            return JSON.parse(result.getContentText());
        }
    } catch (ex) {
    }
    return null;
}



















